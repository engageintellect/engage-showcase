import {
  writeEffect
} from "./chunk-CDVH2LAM.js";
import {
  animationSetup
} from "./chunk-HGKU35Y6.js";

// node_modules/.pnpm/svelte-typewriter@3.1.6_svelte@4.2.1/node_modules/svelte-typewriter/helpers/cleanChildText.js
var cleanChildText = (elements) => elements.forEach((element) => element.currentNode.textContent = "");

// node_modules/.pnpm/svelte-typewriter@3.1.6_svelte@4.2.1/node_modules/svelte-typewriter/modes/cascade.js
var cascade = async (node, props) => {
  const { options, elements } = animationSetup(node, props);
  cleanChildText(elements);
  for (const element of elements) {
    await writeEffect(element, options);
    if (options.keepCursorOnFinish) {
      const isLastElement = elements.indexOf(element) === elements.length - 1;
      !isLastElement && element.currentNode.classList.replace("typing", "finished-typing");
    } else {
      element.currentNode.classList.replace("typing", "finished-typing");
    }
    const cursorHasTimeout = typeof options.keepCursorOnFinish === "number";
    cursorHasTimeout && setTimeout(() => {
      element.currentNode.classList.replace("typing", "finished-typing");
    }, options.keepCursorOnFinish);
  }
  options.dispatch("done");
};
var cascade_default = cascade;

export {
  cascade_default
};
//# sourceMappingURL=chunk-VIDXNHVC.js.map

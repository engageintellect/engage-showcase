---
import type { CollectionEntry } from "astro:content";
import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header.astro";
import HeaderBack from "../components/HeaderBack.astro";
import Footer from "../components/Footer.astro";
import FormattedDate from "../components/FormattedDate.astro";
import { Image } from "astro:assets";

type Props = CollectionEntry<"project">["data"];

const { title, description, pubDate, updatedDate, image, tags, category } =
  Astro.props;


  function formatTag(tag: string) {
    return tag
      .toLowerCase()
      .replace(/\s+/g, "-")
      .replace(/[^\w-]/g, "");
  }





---

<html lang="en" transition:name="root" transition:animate="none">
  <head>
    <BaseHead title={title} description={description} />
  </head>

  <body>
    <!-- <Header /> -->
    <HeaderBack />
    <main class="max-w-4xl mx-auto sm:px-2 sm:my-2">
      <!-- <a href="/project" class="text-xl font-bold">‚Üê Projects</a> -->
      <article transition:animate="fade">
        <div class="relative">
          {
            image && (
              <Image
                class="h-52 sm:h-64 object-cover sm:border sm:rounded-t shadow sm:shadow-none sm:border-neutral-900/20"
                width={1020}
                height={510}
                src={image}
                alt=""
              />
            )
          }

          {
            category && (
              <div class="absolute bottom-0 left-0 shadow border-r border-t border-white bg-neutral-900 text-white rounded-tr-xl p-2 px-4">
                {category}
              </div>
            )
          }
        </div>
        <div class="prose px-2 sm:px-0">
          <div
            class="flex flex-col justify-start items-start sm:items-center py-5 rounded-b-none border-b sm:border-r sm:border-l border-neutral-900/20 sm:rounded-b sm:mb-5 sm:px-2"
          >
            <div class="font-extrathin text-neutral-500">
              <FormattedDate date={pubDate} />
              {
                updatedDate && (
                  <div>
                    Last updated on <FormattedDate date={updatedDate} />
                  </div>
                )
              }
            </div>
            <div class="text-3xl font-semibold sm:text-center">{title}</div>

            {
              tags && (
                <div class="flex gap-1 my-2 w-full flex-wrap justify-start sm:justify-center">
                  {tags.map((tag) => (
                    <a
                      href={`/tags/${formatTag(tag)}/`}
                      class="bg-neutral-900 text-white text-xs font-semibold text-[0.8rem] px-2 py-1 rounded"
                    >
                      #{tag}
                    </a>
                  ))}
                </div>
              )
            }
          </div>

          <slot />
        </div>
      </article>
    </main>
    <Footer />
  </body>
</html>
